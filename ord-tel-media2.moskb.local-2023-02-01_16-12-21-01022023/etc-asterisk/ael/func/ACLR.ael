
// Call ${leg1}>>${leg2} FUNCTION "f1"|"f2", according to the schedule Spec
// Use trigger with z-level to bypass shedule
// insert into "Func" values ('090','ALL',NULL,'Schedule','3300058|0','_Dial(LOCAL/28584@iax/n|10|TtKkfgm)','_Dial(LOCAL/28585@iax/n|10|TtKkfgm)','ztWorkDays');
macro ACLR(ACL,PositiveRoute,NegativeRoute) {
 NoOp(${leg1}>>${leg2} FUNCTION CLIDACL(${ACL},${PositiveRoute},${NegativeRoute}));
 catch h { // without a catch, dialplan stops execution on hangup !!!
  hang=1;
  return;
 }
 Set(RESULT=Invalid Spec);
 if ("${ACL}"="") return;
 Set(RESULT=Invalid Func);
// if ("${PositiveRoute}"="") return;


 RESULT=OK;

 if ("${PositiveRoute}"="") {
  Set(LOCAL(PositiveRoute)="Hang()");
  };



 if ("${NegativeRoute}"="") {
  Set(LOCAL(NegativeRoute)="Hang()");
 };



// Set(DATA=${DATA},FUNC=${CONTEXT};ACL=${ACL};PositiveRoute=${PositiveRoute};NegativeRoute=${NegativeRoute});
// Set(CDR(x-data)={${DATA:1}});
 NoOp(ACL is ${ACL});
 NoOp(PositiveRoute is ${PositiveRoute});
 NoOp(NegativeRoute is ${NegativeRoute});
 NoOp(CLID is ${cid});
// Set(CLID=${FILTER(0-9,${leg1})});
 Set(LOCAL(ALLOW)=${ODBC_ACLCHECK(${ACL},${cid})});
 NoOp(permit is ${ALLOW});


 if("${ALLOW}"="1") {
 NoOp(the number ${leg1} is presented in ACL, so the next route is ${PositiveRoute});
 Set(LOCAL(fn)=${PositiveRoute});
 }else{
 NoOp(the number ${leg1} is NOT presented in ACL, so the next route is ${NegativeRoute});
 Set(LOCAL(fn)=${NegativeRoute});
 }

// Wait(2);


 Set(DATA=${DATA},FUNC=${CONTEXT};ACL=${ACL};PositiveRoute=${PositiveRoute};NegativeRoute=${NegativeRoute});
 Set(CDR(x-data)={${DATA:1}});

// Set(DATA=${DATA},FUNC=${CONTEXT});
// Set(CDR(x-data)={${DATA:1}});

//   Set(local(cdrnow)=${HASH(CDR,x-data)});

//NoOp(maxx: x-data is: ${cdrnow});



 #include "ael/func/FUNC.INC"
 return;
} // macro ACLR(ACL,PositiveRoute,NegativeRoute)



