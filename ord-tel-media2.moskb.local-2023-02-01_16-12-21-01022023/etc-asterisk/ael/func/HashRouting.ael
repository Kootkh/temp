
//using retrieved external webdata as configuration trigger

macro ExternHashRouting(Hash,Param,PositiveRoute,NegativeRoute) {
 NoOp(${leg1}>>${leg2} FUNCTION ExternHashRouting(${Hash},${Param},${PositiveRoute},${NegativeRoute}));

 catch h { // without a catch, dialplan stops execution on hangup !!!
  hang=1;
  return;
 }

 Set(RESULT=Invalid Spec);
 if ("${Hash}"="") return;
 Set(RESULT=Invalid Func);
 if ("${Param}"="") return;

 RESULT=OK;

 if ("${PositiveRoute}"="") {
  Set(LOCAL(lPositiveRoute)="Hang()");
  }else{
  Set(LOCAL(lPositiveRoute)=${PositiveRoute});
  }

 if ("${NegativeRoute}"="") {
  Set(LOCAL(lNegativeRoute)="Hang()");
  }else{
  Set(LOCAL(lNegativeRoute)=${NegativeRoute});
  }


// NoOp(Hash is ${Hash});
// NoOp(Param is ${Param});
// NoOp(PositiveRoute is ${PositiveRoute});
// NoOp(NegativeRoute is ${NegativeRoute});



 if("${HASH(${Hash},${Param})}"="1") {
// NoOp(maxx: hash parameter is true: ${HASH(${Hash},${Param})}, so the next route is ${PositiveRoute});
 Set(LOCAL(fn)=${lPositiveRoute});
 }else{
// NoOp(maxx: hash parameter is false: ${HASH(${Hash},${Param})}, so the next route is ${NegativeRoute});
 Set(LOCAL(fn)=${lNegativeRoute});
 }

// Wait(2);

// NoOp(DATA=${DATA},FUNC=${CONTEXT};Hash=${Hash};Param=${Param};PositiveRoute=${PositiveRoute};NegativeRoute=${NegativeRoute});
 Set(DATA=${DATA},FUNC=${CONTEXT};Hash=${Hash};Param=${Param};PositiveRoute=${PositiveRoute};NegativeRoute=${NegativeRoute});
 Set(CDR(x-data)={${DATA:1}});



 #include "ael/func/FUNC.INC"
 return;
} // macro ExternHashRouting(Hash,Param,PositiveRoute,NegativeRoute)



