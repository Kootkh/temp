// !!! OLD routing scheme: calls from SIP
context sip {
// catch all into new context with the purpose to enable special extensions

 h => {
  NoOp(CHANNELS sip hang = ${CHANNEL} :: ${uniqueid}>${leg1}>${leg2}>${dnid});
//  StopMonitor();
  NoOp(maxx: адрес файла для записи ${mfile});
//  System(/usr/local/sbin/wav2mp3 ${mfile});
//  Set(CDR(pbxserver)=${FILTER(0-9a-zA-Z\.\-,${SHELL(hostname)})});
  Set(CDR(pbxserver)=${PBXSERVER});
  &Event(hang,${CONTEXT});
  Hangup();
 }


 _. => {
  NoOp(maxx: sip channel name ${CHANNEL(name)} callerid(num) ${CALLERID(num)} peername ${CHANNEL(peername)} forwardername ${FORWARDERNAME});
  if ("${CHANNEL(peername)}"=="" && "${FORWARDERNAME}"!="" && "${BIND}"!="") {
    Set(SIPROOT=${CUT(FORWARDERNAME,/,2)});
    Set(SIPROOT=${CUT(SIPROOT,-,1)});
    Set(__TAG=${SIPROOT});
    Set(__cid=${CUT(SIPROOT,+,2)});
    Set(__dnid=${EXTEN});
    NoOp(maxx: phone redirect detected, need to chanage siprt forwardername ${SIPROOT} cid ${cid});
    } else {
    Set(SIPROOT=${CHANNEL(peername)});
    Set(__siporiginid=${CHANNEL(UniqueID)});
    }
//    Wait(3);

  siprt=;
    //Set(__mfile=); //for MonitorTo use
//  Set(HASH(siprt)=${ODBC_SIPRT(${CHANNEL(peername)})});
    Set(HASH(siprt)=${ODBC_SIPRT(${SIPROOT})});

 // NoOp(${HASHKEYS(siprt)});
//  NoOp(maxx: calleridnumber from rt table ${HASH(siprt,calleridnumber)});

  if ("${HASH(siprt,callerid)}"!="") {
  Set(CALLERID(all)=${HASH(siprt,callerid)});
  }


 //DumpChan();

//  Set(__extenmask=${HASH(siprt,calleridnumber)});
  Set(__extenmask=${CALLERID(num)});
  NoOp(maxx:normalized  sip channel name ${CHANNEL(name)} callerid(num) ${CALLERID(num)} peername ${CHANNEL(peername)} forwardername ${FORWARDERNAME} extenmask ${extenmask});
  __n1 = ${CALLERID(num)};
  NoOp(CHANNELS sip = ${CHANNEL} :: ${uniqueid}>${leg1}>${leg2}>${dnid});

  &call-entry(${CONTEXT});

  // Leg definitions must be stored overall call processing!
  if ("${leg1}"="") Set(__leg1=${CALLERID(num)});
  if ("${leg2}"="") Set(__leg2=${CALLERID(dnid)}); // In most cases, must be ${EXTEN} in entry context
  if ("${leg2}"="") Set(__leg2=${EXTEN}); // In most cases, must be ${EXTEN} in entry context
  if ("${uniqueid}"="") Set(__uniqueid=${CDR(uniqueid)});

  Set(CHANNEL(accountcode)=${leg2});
  Set(CDR(userfield)=${uniqueid}>${leg1}>${leg2}>ROOT);
  Set(CHANNEL(amaflags)=billing);
//  Set(CDR(pbxserver)=integra.obit.ru);
//  Set(CDR(pbxserver)=${FILTER(0-9a-zA-Z\.\-,${SHELL(hostname)})});
  //Set(CDR(pbxserver)=${SHELL(hostname)});
  Set(CDR(pbxserver)=${PBXSERVER});
  //NoOp(maxx: current instance is ${SHELL(hostname)});



  if (${REGEX("^[*][*][0-9]" ${dnid})}=1) {
//   Set(SHARED(PICKUP,SIP/${dnid:2})=${cid});
   goto blf|${EXTEN:2}|1; // BLF pickup
  }

  if ("${BLINDTRANSFER}"!="") goto transfer|${EXTEN}|1; // BLIND TRANSFER TRAP
  if ("${dnid}"="") { // TRANSFER TRAP
   Set(ALLOW_TRANSFER=${HASH(ext,FeatureTransfer)});
   goto transfer|${EXTEN}|1;
  }
  if (${incoming}=1) {
   goto incoming-call|s|1;
  } else {
   Set(_PARENT=${cid});
   Set(GROUP(O)=${cid});
   //DumpChan();

   goto outgoing-call|s|1;
  }


 } // exten _.
} // context sip
