// DialPlan processing contexts
// !!! OLD routing scheme: stupid routing for call-back etc.
context out { // Place for outgoing calls through Dial(LOCAL/cid-ext-bypass@out)
// catch all into new context with the purpose to enable special extensions
 h => {
//  Set(CDR(pbxserver)=${FILTER(0-9a-zA-Z\.\-,${SHELL(hostname)})});
  Set(CDR(pbxserver)=${PBXSERVER});
  NoOp(CHANNELS out = ${CHANNEL} ${n1}>>${n2});
  Hangup(${HANGUPCAUSE});
 }
 _. => {
    //DumpChan();
  NoOp(maxx: Out 10: number B ${number} dnid ${dnid} number A(cid) ${cid} callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});

  if ("${dnid}"="") {
        Set(__dnid=${SPAWN});
        NoOp(maxx: Out 11: dnid was empty after disa and is now ${dnid});
    }

  NoOp(INITIAL_RING ${cid} >> ${dnid});
  Set(did=${dnid});
//  NoOp(maxx: Out 13: number B ${number}  number A(cid) ${cid} callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});
  // Don't forget to adjust HASH(ext) proper value!
  if ("${CUT(EXTEN,-,2)}"="") {  // Empty while transfers
   Set(__cid=${dnid});
   Set(__dnid=${EXTEN});
   &call-entry(${CONTEXT});
  } else {
   if ("${CUT(EXTEN,-,2)}"!="!") {
    Set(CALLERID(dnid)=${CUT(EXTEN,-,2)});
    if ("${CUT(EXTEN,-,1)}"="!") { // Redirect from "TRUNK" extension
     Set(__REDIRECT=${leg2});
    }
   } else {
    Set(__REDIRECT=${did});
    Set(CALLERID(dnid)=${leg2});
    Set(__cid=${cid});
    Set(CALLERID(RDNIS)=${leg1});  // Set "redirected dialed number information service" to initial dialer number
   }
   Set(__dnid=${CALLERID(dnid)});

   if ("${CUT(dnid,+,2)}"!=""&"${CUT(dnid,+,1)}"!="") { // Dial "BIND+dnid" - reject BIND
    if ("${BIND}"="") Set(__BIND=${CUT(dnid,+,1)});
    if ("${dnid:0:1}"="!") Set(__BIND=${CUT(dnid:1,+,1)});
    Set(__dnid=${CUT(dnid,+,2)});
   }

   if ("${dnid}"="!!"|"${dnid}"=">!") {  // Set "!${leg2}" | ">${leg2}"
    Set(__dnid=${dnid:0:1}${leg2});
   }

//  NoOp(maxx: Out 43: number B ${number}  number A(cid) ${cid} callerid-num ${CALLERID(num)} callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});
//   if ("${dnid}"="\\!") {  // Set "!"
//    Set(__dnid=!);
//   }

   if ("${dnid:0:1}"="!") {  // Force redirection with no CallerID substitution
    Set(__SPAWNMODE=${dnid:0:1});
    Set(__REDIRECT=${did});
    Set(__cid=${leg1});
    Set(__dnid=${CUT(dnid:1,+,1)});
    Set(CALLERID(RDNIS)=${leg2});  // Set "redirected dialed number information service" to initial dialed number
//   NoOp(maxx: Out 54!: number B ${number}  number A(cid) ${cid} callerid-num ${CALLERID(num)} callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});
   } else {
    if ("${CUT(EXTEN,-,2)}"!="!") Set(__cid=${CUT(EXTEN,-,1)});
    if ("${EXTEN:0:1}"!="!" & "${dnid:0:1}"!=">") Set(__leg2=${dnid}); // For LoopGuard etc.
//   NoOp(maxx: Out 58!: number B ${number}  number A(cid) ${cid} callerid-num ${CALLERID(num)}  callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});
   }


   if ("${dnid:0:1}"=">") {  // Force redirection with CallerID:=DNID(incoming)
   NoOp(maxx: Out 63>: number B ${number}  number A(cid) ${cid} callerid-num ${CALLERID(num)} callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});
    Set(__SPAWNMODE=${dnid:0:1});
    Set(__REDIRECT=${did});
    Set(__cid=${leg2});
    Set(__dnid=${CUT(dnid:1,+,1)});
    Set(CALLERID(RDNIS)=${did});
//    Set(CALLERID(RDNIS)=${leg2});  // Set "redirected dialed number information service" to initial dialed number
   NoOp(maxx: Out 68>: number B ${number}  number A(cid) ${cid} callerid-num ${CALLERID(num)} callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});
   }
   //DumpChan();
   NoOp(maxx: Out 67: number B ${number}  number A(cid) ${cid} callerid-num ${CALLERID(num)} callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});



   Set(from=${CONTEXT});
//   Set(HASH(ext)=${ODBC_EXTEN(${cid})},${BIND});
   Set(HASH(ext)=${ODBC_EXTEN(${cid},${BIND})});
   if ("${BIND}"="") Set(__BIND=${HASH(ext,BIND)});

   Set(CDR(x-domain)=${BIND});
   Set(CHANNEL(userfield)=${BIND});
   if ("${CUT(EXTEN,-,3)}"="1") Set(HASH(ext,CallLevel)=7);

   Set(__URLa=${ODBC_URL(${FILTER(0-9,${cid})},${BIND})});
   Set(__URLb=${ODBC_URL(${FILTER(0-9,${dnid})},${BIND})});
   &Event(egress,${CONTEXT});
  }

  Set(incoming=0);
  chan_local=1;
  Set(CHANNEL(language)=${DEFAULT_LANG});

  if ("${HASH(ext,MOH)}"!="") {
   Set(CHANNEL(musicclass)=${HASH(ext,MOH)});
  } else Set(CHANNEL(musicclass)=default);

  Set(CDR(pbxserver)=${PBXSERVER});

    Set(DATA=${DATA},CONTEXT=out;CID=${cid};DID=${dnid};REDIRECT=${REDIRECT};Exten=${REDIRECT});
  Set(CDR(last_guid)=${ODBC_GUID(${BIND},${REDIRECT})});
  CELGenUserEvent(last_guid,${CDR(last_guid)});
  Set(CDR(x-data)={${DATA:1}});
  goto outgoing-call|s|1;
 }
} // context out
