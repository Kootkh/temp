// !!! OLD routing scheme: city call implementation
macro make-call(number, level) { // External call: get route to number at level (or default), then call it
// NoOp(Make call to ${number} at ${level});
 Set(ncid=${FILTER(0-9,${cid})});
 Set(ndid=${FILTER(0-9,${number})}); // +79211234567 becomes 79211234567

// Set(CDR(accountcode)=${ncid});
// Set(CDR(userfield)=${uniqueid}>${leg1}>${leg2}>0:make-call);
// Set(CDR(amaflags)=billing);
 Set(CHANNEL(accountcode)=${ncid});
 Set(CHANNEL(userfield)=${uniqueid}>${leg1}>${leg2}>0:make-call);
 Set(CHANNEL(amaflags)=billing);

 Set(route=${ODBC_ROUTE(${ncid},${ndid},${level},0)});
 if ("${route}"="")
 {
  &invalid-call(${number}); // No default route from cid to dnid
  return;
 }
 // For external calls, we have to set valid CallerId, except drop such call!
 Set(id=${ODBC_CID(${ncid})});
 if ("${id}"="")
 {
  &invalid-call(${number}); // No valid CID
  return;
 }
 Set(_cidX=${cid});
// Set(CALLERID(num)=${id});
// NoOp(CALLERID(all) = ${CALLERID(all)} CALLERPRES() = ${CALLERPRES()});
 Set(CALLERID(num)=${id});
 Set(CALLERID(ani)=${id});
 Set(CALLERPRES()=allowed_not_screened);

 // Now evaluate Dial() features
 if ("${from}"!="transfer") { // During transfer, calling and called parties may swap!!!
  if ("${HASH(ext,FeatureTransfer)}"="1") T=T; else T=;
  if ("${HASH(ext,FeaturePark)}"="1") K=K; else K=;
 }

 Set(timeout-dial=${ODBC_CONST(timeout-dial)}); // Timeout value for Dial()
 if ("${timeout-dial}"="") timeout-dial=90;

 // Allow dial DTMF after connection
 Set(D=${CUT(route,%,2)});
 if ("${D}"!="") {
  Set(D=D(${D}${number}));
  Set(route=${CUT(route,%,1)});
  Set(number=${CUT(route,/,2)});
  Set(route=${CUT(route,/,1)}/);
 }

 goto ${number}|1; // CDR hack

 catch h { // without a catch, dialplan stops execution on hangup !!!
  hang=1;
  return;
 }

 catch t { // Timeout trap
  return;
 }

 catch _. {
  if ("${dnid}"="") goto transfer|${EXTEN}|1; // TRANSFER TRAP
  // Line monitoring - out
  if ("${HASH(ext,MonitorTo)}"!="") {
   Set(mfile=${HASH(ext,MonitorTo)}/${cid}/${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${dnid}-out);
   MixMonitor(${mfile}.wav,b,/usr/bin/lame -m m --cbr -b 32 "${mfile}.wav" "${mfile}.mp3" && rm -f "${mfile}.wav");
  }
//  Set(CDR(userfield)=${uniqueid}>${leg1}>${leg2}>1:route);

// BYPASS
//  if (${REGEX("^495[0-9]{7}$" ${cid})}=1) {
//   Set(CALLERID(all)=${cid});
//   Dial(SIP/mastertel.msk/${number},${timeout-dial},${T}${K}${R}fg);
//   return;
//  }

  Set(CDR(userfield)=${uniqueid}>${leg1}>${leg2}>1:${route}${number});
  Dial(${route}${number},${timeout-dial},${T}${K}${R}${D}fgM(mkk));

  if ("${DIALSTATUS}"="CHANUNAVAIL" || "${DIALSTATUS}"="CONGESTION") // Some channel troubles?
// ${HANGUPCAUSE}<16 || ${HANGUPCAUSE}>31 this does not work on IAX !!!
  {
   Set(CDR(userfield)=${uniqueid}>${leg1}>${leg2}>1:${route}${number}:ERROR ${HANGUPCAUSE});

   // Spare route, if one exists
   Set(route=${ODBC_ROUTE(${ncid},${number},${level},1)});
   if ("${route}"!="")
   {
    // Allow dial DTMF after connection
    Set(D=${CUT(route,%,2)});
    if ("${D}"!="") {
     Set(D=D(${D}${number}));
     Set(route=${CUT(route,%,1)});
     Set(number=${CUT(route,/,2)});
     Set(route=${CUT(route,/,1)});
    }

    Set(CDR(userfield)=${uniqueid}>${leg1}>${leg2}>1:${route}${number}:ERROR ${HANGUPCAUSE}>2:${route}${number});
    Dial(${route}${number},${timeout-dial},${T}${K}${R}${D}fgM(mkk));
   }
   return;
  }
 }
 return;
} // macro make-call(number, level)

context macro-mkk { // Such fucking sintaxis due to ael bug in calling M() dial macro!!!
 s => {
  Set(CHANNEL(language)=${DEFAULT_LANG});
  // CallBack hack for MOH bug



  if ("${leg1}${leg2}"="") Set(CHANNEL(musicclass)=beep);
  Set(GROUP(LegB)=${uniqueid}); // Channel hook
  &Event(connectroute,${CONTEXT});
 }
} // macro mkk(res)

