// !!! OLD routing scheme: peering
macro peer(res) { // Try to route call through the peer as specified in ${HASH(res)}
 Set(HASH(res)=${ODBC_PEER(${dnid},${BIND})});
//FUCK!!! TRANSFER!!!-- Executing [060@peer:1] Dial("Local/060@peer-8a4b;2", "/,,g") in new stack
 Set(LOCAL(number)=${dnid});
 if (${HASH(res,Cut)}>0) Set(LOCAL(number)=${number:${HASH(res,Cut)}});
 Set(LOCAL(number)=${HASH(res,Prefix)}${number}${HASH(res,Suffix)});
 if (${HASH(res,Offset)}!=0) Set(LOCAL(number)=${number}+${HASH(res,Offset)});

 // Remember that ${ext} is empty for incoming call
 if ("${HASH(ext,FeatureTransfer)}"="1") T=T; else T=;
 if ("${HASH(ext,FeaturePark)}"="1") K=K; else K=;

 Set(LOCAL(timeout-dial)=${ODBC_CONST(timeout-dial)}); // Timeout value for Dial()
// if ("${timeout-dial}"="") timeout-dial=90;

 if ("${BIND}"="") Set(__BIND=${HASH(res,BIND)});

 if ("${CHANNEL(channeltype)}"="Local") ForkCDR();
 Set(CHANNEL(amaflags)=billing);
 Set(CDR(x-tag)=${TAG});
 Set(CDR(x-domain)=${BIND});
  Set(CHANNEL(userfield)=${BIND});
 Set(CDR(x-cid)=${cid});
 Set(CDR(x-did)=${dnid});
 Set(CDR(x-dialed)=${number});
 Set(CDR(x-spec)=${HASH(res,Channel)});
 Set(CDR(x-insecure)=1);

 if ("${incoming}"="1") Set(CHANNEL(accountcode)=${leg2});

 goto ${number}|1; // CDR hack

 catch h { // without a catch, dialplan stops execution on hangup !!!
  Set(CDR(x-result)=${HANGUPCAUSE}:${DIALSTATUS});
  CELGenUserEvent(xresult,${DIALSTATUS});
//  StopMonitor();
  hang=1;
  return;
 }

 catch t { // Timeout trap
  Set(CDR(x-result)=${HANGUPCAUSE}:${DIALSTATUS});
  CELGenUserEvent(xresult,${DIALSTATUS});
  return;
 }

 catch _. {
  if ("${dnid}"="") goto transfer|${EXTEN}|1; // TRANSFER TRAP
  if ("${HASH(res,Channel)}"="LOCAL") {
//   Dial(LOCAL/${number}/n,,rfg);
   Dial(LOCAL/${number}/n,,rfgM(mmm^${ext1}^${DF}^${HASH(res,MOH)}^${TR}));
// Dial(${Type}${ext}${DialSuffix},${HASH(res,Timeout)},${T}${K}${R}${A}fgM(mmm^${ext1}^${DF}^${HASH(res,MOH)}^${TR}));
   return;
  }
  NoOp(XXX=${CUT(HASH(res,Channel),/,1)} == ODBC_FUNC(${CUT(HASH(res,Channel),/,2)},${cid},${BIND}));
  if ("${CUT(HASH(res,Channel),/,1)}"="SUB") {
   Set(HASH(fnc)=${ODBC_FUNC(${CUT(HASH(res,Channel),/,2)},${cid},${BIND})}); // Is function defined?
 //  NoOp(maxx:fnc hash keys: ${HASHKEYS(fnc)});
   if ("${HASH(fnc,Macro)}"!="") {
    Set(__leg2=${number});
    Set(__leg1=${CUT(HASH(res,Channel),/,2)});

    if ("${HASH(fnc,BIND)}"!="") { // Swtich binding
     Set(__BIND=${HASH(fnc,BIND)});
     Set(CDR(x-domain)=${BIND});
     Set(CHANNEL(userfield)=${BIND});
    }

    &${HASH(fnc,Macro)}(${HASH(fnc,P1)},${HASH(fnc,P2)},${HASH(fnc,P3)},${HASH(fnc,P4)});
    NoOp(RESULT=${RESULT});
   }
   return;
  }

  &LoopGuard();

  // Line monitoring - out
  if ("${HASH(ext,MonitorTo)}"!="") {
   &SetMonitor(${HASH(ext,MonitorTo)},${HASH(ext,BIND)},${cid},${dnid},out);
  } else {
   if ("${MonitorTo}"!="") &SetMonitor(${MonitorTo},${BIND},${CHANNEL(accountcode)},-${cid}-${dnid},out);
  }

  Set(CALLERID(RDNIS)=${leg2});
  Set(CDR(userfield)=${uniqueid}>${leg1}>${leg2}>P:${HASH(res,Channel)}${number});
  NoOp(maxx: number B ${number}  number A ${cid} callerid-name ${CALLERID(name)} callevel ${level}  tag ${TAG} bind ${BIND} rdnis ${CALLERID(RDNIS)});
  Dial(${HASH(res,Channel)}${number},${timeout-dial},${T}${K}${R}fgM(mmm^${ext1}^${DF}^${HASH(res,MOH)}^${TR}));

  Set(CDR(x-result)=${HANGUPCAUSE}:${DIALSTATUS});
  CELGenUserEvent(xresult,${DIALSTATUS});
  return;
 }
 return;
} // macro peer(res)
