// Dynamic N-WAY conferencing

macro conference(NoMaster,KeepOpen) {
// Pass channel to dynamically created conference with confno=${cid}
// Enslave all to the master channel, if ("NoMaster"!="1")
// Don't destroy conference on master hangup, if ("KeepOpen"="1")
 catch h { // without a catch, dialplan stops execution on hangup !!!
  hang=1;
  MeetMeAdmin(${master},N);
  if ("${cid}"="${master}") {
   if (("${ext}"="")&("${KeepOpen}"!="1")) {
    MeetMeAdmin(${master},K);
   }
  }
  MeetMeAdmin(${master},n);
  return;
 }

 catch _[*] {
  if ("${ext}"="1") {
  ext=;
  MeetMe(${cid},AdMqX1);
  }
  ext=1;
  Set(TIMEOUT(digit)=3);
  Set(CHANNEL(musicclass)=);
  WaitExten(60,m(beep));
 }

 catch _X. {

  if ("${ext}"="1") {
   ext=0;
   Set(DYNAMIC_FEATURES=xferA);
   Set(SHARED(conference_established,${master_channel})=);
   Set(CHANNEL(musicclass)=${HASH(ext,MOH)});
   Dial(LOCAL/${cid}-${EXTEN}@out/n,300,TtKkfgH);
   return;  // Avoid MeetMe on dead channel!!!
  }
  ext=;
  Set(SHARED(conference_established,${master_channel})=1);
  MeetMe(${master},AdMqX1);
 }

 NoOp(conference master = ${master});
 Set(CHANNEL(language)=ru);

 if ("${SHARED(cid)}"!="") { // ChannelRedirect hack
  Set(cid=${SHARED(cid)});
 }

 if ("${master}"="") {
  Set(master=${SHARED(master)});
 }

 if ("${master}"="") {
  Set(master=${cid});
 }

 if ("${cid}"!="") {
//  Answer;
  Set(DYNAMIC_FEATURES=);
  Set(__inconference=1);  // Because DYNAMIC_FEATURES reset doesn't work in some cases
  if ("${NoMaster}"!="1") { // All channels stay on hold until master enter
   if ("${cid}"!="${master}") {
    MeetMe(${master},dMwq1);
   } else {
    MeetMe(${master},AdMX1);
   }
  } else { // Conference starts since 2 channels present
   if ("${cid}"!="${master}") {
    MeetMe(${master},dMq1);
   } else {
    MeetMe(${master},AdMX1);
   }
  }
 }
 return;
} // macro conference(NoMaster,KeepOpen)

context macro-conference-caller {
 s => {
  if (("${SHARED(inconference,${CHANNEL})}"="")&("${SHARED(inconference,${BRIDGEPEER})}"="")) {
   Set(SHARED(inconference,${CHANNEL})=1);
   Set(SHARED(inconference,${BRIDGEPEER})=1);

   NoOp(macro-conference-caller ${CHANNEL} ${BRIDGEPEER});
   Set(__master=${cid});
   Set(__master_channel=${CHANNEL});
   Set(SHARED(master,${BRIDGEPEER})=${cid});
   Set(SHARED(cid,${BRIDGEPEER})=${IMPORT(${BRIDGEPEER},callee)});
   ChannelRedirect(${BRIDGEPEER},transfer,CONF,1);
   Read(num,dial,0,i,10,3);
   if ("${num}"!="") {
    Set(CALLERID(dnid)=);
    ext=;
    Dial(LOCAL/${cid}-${num}@out/n,300,TtKkfgH);
   }
  } else {
   NoOp(== "${conference_dial}" == "${SHARED(conference_established,${CHANNEL})}" == "${SHARED(conference_established,${BRIDGEPEER})}" ==);
   if (("${SHARED(conference_established,${CHANNEL})}"="")&("${SHARED(conference_established,${BRIDGEPEER})}"="")) {
    if ("${master_channel}"="") {
     Set(__master_channel=${CHANNEL});
    }
    Set(SHARED(conference_established,${CHANNEL})=1);
    Set(SHARED(conference_established,${BRIDGEPEER})=1);
    Set(SHARED(cid,${BRIDGEPEER})=INCONFERENCE);
    Set(SHARED(master,${BRIDGEPEER})=${SHARED(master)});
    ChannelRedirect(${BRIDGEPEER},transfer,CONF,1);
    Dial(LOCAL/${cid}-CONF@out/n,300,TtKkfgH);
   } else {

//    MeetMeAdmin(${cid},k);
 //   Read(num,dial,0,i,10,3);
 //   if ("${num}"!="") {
//     Set(CALLERID(dnid)=);
//     ext=;
//     Dial(LOCAL/${cid}-${num}@out/n,300,TtKkfgH);
//    }

   }
  }
 }
}

context macro-conference-callee {
 s => {
  if (("${SHARED(inconference,${CHANNEL})}"="")&("${SHARED(inconference,${BRIDGEPEER})}"="")) {
   Set(SHARED(inconference,${CHANNEL})=1);
   Set(SHARED(inconference,${BRIDGEPEER})=1);

   NoOp(macro-conference-callee ${CHANNEL} ${BRIDGEPEER});
   Set(__master=${IMPORT(${BRIDGEPEER},callee)});
   Dial(LOCAL/${cid}-CONF@out/n,300,M(conference-callee-connect^${BRIDGEPEER}^${master}));
  }
 }
}

context macro-conference-callee-connect {
 s => {
  NoOp(macro-conference-callee-connect ${ARG1});
  Set(SHARED(inconference,${ARG1})=1);

  Set(SHARED(cid,${ARG1})=${ARG2});
  Set(SHARED(master,${ARG1})=${ARG2});
  ChannelRedirect(${ARG1},transfer,#000#,1);
 }
}
